- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
   - name: Import VPC Vars
     include_vars: vars/vpc_setup

   - name: Create vpro VPC
     ec2_vpc_net:
       name: "{{vpc_name}}"
       cidr_block: "{{vpcCidr}}"
       region: "{{region}}"
       dns_support: yes
       dns_hostnames: yes
       tenancy: default
       state: "{{state}}"
     register: vpout   

   - debug:
       var: vpout

   - name: Create Pubsub1 in Zone 1
     ec2_vpc_subnet: 
       vpc_id: "{{vpout.vpc.id}}"
       region: "{{region}}"
       az: "{{zone1}}"
       state: "{{state}}"
       cidr: "{{PubSub1Cidr}}"
       map_public: yes
       resource_tags: 
        Name: Vpro_pubsub1
     register: Pubsub1_out   

   - name: Create Pubsub2 in Zone 2
     ec2_vpc_subnet: 
       vpc_id: "{{vpout.vpc.id}}"
       region: "{{region}}"
       az: "{{zone2}}"
       state: "{{state}}"
       cidr: "{{PubSub2Cidr}}"
       map_public: yes
       resource_tags: 
        Name: Vpro_pubsub2
     register: Pubsub2_out

   - name: Create Pubsub3 in Zone 3
     ec2_vpc_subnet: 
       vpc_id: "{{vpout.vpc.id}}"
       region: "{{region}}"
       az: "{{zone3}}"
       state: "{{state}}"
       cidr: "{{PubSub3Cidr}}"
       map_public: yes
       resource_tags: 
        Name: Vpro_pubsub3
     register: Pubsub3_out       

   - name: Create Privsub1 in Zone 1
     ec2_vpc_subnet: 
       vpc_id: "{{vpout.vpc.id}}"
       region: "{{region}}"
       az: "{{zone1}}"
       state: "{{state}}"
       cidr: "{{PrivSub1Cidr}}"
       map_public: yes
       resource_tags: 
        Name: Vpro_privsub1
     register: Privsub1_out 

   - name: Create Privsub2 in Zone 2
     ec2_vpc_subnet: 
       vpc_id: "{{vpout.vpc.id}}"
       region: "{{region}}"
       az: "{{zone2}}"
       state: "{{state}}"
       cidr: "{{PrivSub2Cidr}}"
       map_public: yes
       resource_tags: 
        Name: Vpro_privsub2
     register: Privsub2_out

   - name: Create Privsub3 in Zone 3
     ec2_vpc_subnet: 
       vpc_id: "{{vpout.vpc.id}}"
       region: "{{region}}"
       az: "{{zone3}}"
       state: "{{state}}"
       cidr: "{{PrivSub3Cidr}}"
       map_public: yes
       resource_tags: 
        Name: Vpro_privsub3
     register: Privsub3_out       

   - name: Create a Internet gateway
     ec2_vpc_igw:
       vpc_id: "{{vpout.vpc.id}}"
       region: "{{region}}"
       state: "{{state}}"
       resource_tags: 
        Name: Vpro_IGW
     register: igw_out

   - name: Create a Pub subnet Routetable
     ec2_vpc_route_table:
       vpc_id: "{{vpout.vpc.id}}"
       region: "{{region}}"
       resource_tags: 
        Name: Vpro_PubRT
       subnets:
        - "{{PubSub1_out.subnet.id}}"
        - "{{PubSub2_out.subnet.id}}"
        - "{{PubSub3_out.subnet.id}}"
       routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{igw_out.gateway_id}}"   
     register: pub_rt_out   
       
   - name: Create a new nat gateway and allocate new EIP if a nat gateeay does not exist in the nat gateway
     ec2_vpc_nat_gateway:
       state: "{{state}}"
       subnet_id: "{{Pubsub1_out.subnet.id}}"
       wait: yes
       region: "{{region}}"
       if_esixt_do_not_create: true
     register: Nat_out

   - name: Create a Priv subnet Routetable
     ec2_vpc_route_table:
       vpc_id: "{{vpout.vpc.id}}"
       region: "{{region}}"
       resource_tags: 
        Name: Vpro_PrivRT
       subnets:
        - "{{PrivSub1_out.subnet.id}}"
        - "{{PrivSub2_out.subnet.id}}"
        - "{{PrivSub3_out.subnet.id}}"
       routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{Nat_out.gateway_id}}"   
     register: priv_rt_out  